
import sys,os,commands
import  os
import re
import sys


#print "----------------------------------------------"
Decider('MD5-timestamp')
ZDAQROOT="/opt/zdaq"

fres=os.popen('uname -r')
kl=fres.readline().split(".")

platform="UBUNTU"
if (kl[len(kl)-1][0:3] == 'el5'):
    platform="SLC5"

if (kl[len(kl)-2][0:3] == 'el6'):
    platform="SLC6"
print kl[len(kl)-2][0:3]
fres=os.popen('uname -p')
kp=fres.readline()
osv=kp[0:len(kp)-1]

print platform,osv

Bit64=False
Bit64=os.uname()[4]=='x86_64'

kl=os.uname()[2].split(".")
platform="UBUNTU"
if (kl[len(kl)-1][0:3] == 'el5'):
    platform="SLC5"

if (kl[len(kl)-2][0:3] == 'el6'):
    platform="SLC6"

Arm=os.uname()[4]=='armv7l'

if Arm or platform=="UBUNTU":
  boostsystem='boost_system'
  boostthread='boost_thread'
else:
  boostsystem='boost_system-mt'
  boostthread='boost_thread-mt'


package=os.path.basename(os.getcwd())
  

Use_Mongoose=os.path.exists("/usr/local/include/mongoose")

# includes
INCLUDES=['include',"/usr/include/boost141/","/usr/include/jsoncpp"]
  
CPPFLAGS=["-pthread","-O2","-DLINUX", "-DREENTRANT" ,"-Dlinux", "-DLITTLE_ENDIAN__ ", "-Dx86","-std=c++11"]
LIBRARIES=['pthread', 'm','stdc++',boostsystem,boostthread,'jsoncpp']


#Library path XDAQ,DHCAL and ROOT + Python
if (Bit64):
  LIBRARY_PATHS=["/usr/lib64","/usr/local/lib","/opt/dhcal/levbdim/lib"]
else:
  LIBRARY_PATHS=["/usr/lib","/usr/local/lib"]

if (Use_Mongoose):
  LIBRARY_PATHS.append('/usr/local/lib')
  LIBRARIES.append('mongoose')
  INCLUDES.append('/usr/local/include/')
  INCLUDES.append('/usr/local/include/mongoose')
 
  
#link flags
LDFLAGS=["-fPIC","-dynamiclib"]


# Create the Environment
env = Environment(CPPPATH=INCLUDES,CPPFLAGS=CPPFLAGS,LINKFLAGS=LDFLAGS, LIBS=LIBRARIES,LIBPATH=LIBRARY_PATHS)




if (Bit64 and  (not os.path.exists("/usr/include/CAENHVWrapper.h"))):
    os.system("cd utils/packages/;./install")

#SConscript(['SConscript','Bmp/SConscript','Caen/SConscript','Ftdi/SConscript','Dif/SConscript','Mdcc/SConscript','Sdcc/SConscript','Genesys/SConscript','Zup/SConscript','Wiener/SConscript',"utils/netLink/SConscript"])

SConscript(['Zup/SConscript'])

#SConscript(dirs=['.','Bmp','Caen','Ftdi','Dif','Mdcc','Sdcc','Genesys','Zup','Wiener',"utils/netLink"],name='SConscript')
