import sys,os,commands
import  os
import re
import sys


#print "----------------------------------------------"
Decider('MD5-timestamp')
ZDAQROOT=os.getenv("ZDAQROOT")
LYDAQROOT=os.getenv("LYDAQROOT")

fres=os.popen('uname -r')
kl=fres.readline().split(".")

platform="UBUNTU"
if (kl[len(kl)-1][0:3] == 'el5'):
    platform="SLC5"

if (kl[len(kl)-2][0:3] == 'el6'):
    platform="SLC6"
print kl[len(kl)-2][0:3]
fres=os.popen('uname -p')
kp=fres.readline()
osv=kp[0:len(kp)-1]

print platform,osv

Bit64=False
Bit64=os.uname()[4]=='x86_64'

kl=os.uname()[2].split(".")
platform="UBUNTU"
if (kl[len(kl)-1][0:3] == 'el5'):
    platform="SLC5"

if (kl[len(kl)-2][0:3] == 'el6'):
    platform="SLC6"

Arm=os.uname()[4]=='armv7l'

fgcc=os.popen("gcc --version | grep ^gcc | sed 's/^.* //g'")
kl=fgcc.readline().split(".")

NOOCCI=(int(kl[0])>4)
Use_Oracle=os.path.isdir("/opt/ILCConfDB")

if Arm or platform=="UBUNTU":
  boostsystem='boost_system'
  boostthread='boost_thread'
else:
  boostsystem='boost_system-mt'
  boostthread='boost_thread-mt'


package=os.path.basename(os.getcwd())
  

Use_Mongoose=os.path.exists("/usr/local/include/mongoose")

# includes
INCLUDES=['include',LYDAQROOT+"/drivers/include","/usr/include/boost141/","/usr/include/jsoncpp",ZDAQROOT+"/include",LYDAQROOT+"/drivers/common/include"]
  
CPPFLAGS=["-pthread","-O4","-DLINUX", "-DREENTRANT" ,"-Dlinux", "-DLITTLE_ENDIAN__ ", "-Dx86","-std=c++11"]
if (Arm or NOOCCI):
    CPPFLAGS.append("-DNO_DB")

if (not Use_Oracle):
    CPPFLAGS.append("-DNOORACLE")
    

LIBRARIES=['pthread', 'm','stdc++',boostsystem,boostthread,'jsoncpp','zdaq','z','log4cxx','netlink','cslm']


#Library path XDAQ,DHCAL and ROOT + Python
if (Bit64):
  LIBRARY_PATHS=["/usr/lib64","/usr/local/lib",LYDAQROOT+"/drivers/lib",ZDAQROOT+"/lib"]
else:
  LIBRARY_PATHS=["/usr/lib","/usr/local/lib",LYDAQROOT+"/drivers/lib",ZDAQROOT+"/lib"]

#link flags
LDFLAGS=["-fPIC","-dynamiclib"]


# Create the Environment
env = Environment(CPPPATH=INCLUDES,CPPFLAGS=CPPFLAGS,LINKFLAGS=LDFLAGS, LIBS=LIBRARIES,LIBPATH=LIBRARY_PATHS)

#print "CC is:",env.subst('$CPPPATH')




#print "CC is:",env.subst('$CPPPATH')



# Library source
LIBRARY_SOURCES=Glob("src/*.cc")

#print LIBRARY_SOURCES
#LIBRARY_SOURCES=['src/TdcConfigAccess.cc','src/HR2ConfigAccess.cc']

print LIBRARY_SOURCES


#Shared library
lyname="lib/lydaq_"+package
print "building ",lyname
lypack=env.SharedLibrary(lyname,LIBRARY_SOURCES)




#Daemon 

myinc=[]
for x in Glob("include/*.hh"):
  myinc.append("include/"+x.name)
#print plist
env.Install("../lib",lypack)
env.Install("../include",myinc)
###env.Install("/opt/dhcal/lib",levbdimdaq)


env.Alias('install', ["../lib","../include"])



