import sys,os,commands
import  os
import re
import sys


#print "----------------------------------------------"
Decider('MD5-timestamp')
ZDAQROOT=os.getenv("ZDAQROOT")
LYDAQROOT=os.getenv("LYDAQROOT")

fres=os.popen('uname -r')
kl=fres.readline().split(".")

platform="UBUNTU"
if (kl[len(kl)-1][0:3] == 'el5'):
    platform="SLC5"

if (kl[len(kl)-2][0:3] == 'el6'):
    platform="SLC6"
print kl[len(kl)-2][0:3]
fres=os.popen('uname -p')
kp=fres.readline()
osv=kp[0:len(kp)-1]

print platform,osv

Bit64=False
Bit64=os.uname()[4]=='x86_64'

kl=os.uname()[2].split(".")
platform="UBUNTU"
if (kl[len(kl)-1][0:3] == 'el5'):
    platform="SLC5"

if (kl[len(kl)-2][0:3] == 'el6'):
    platform="SLC6"

Arm=os.uname()[4]=='armv7l'

fgcc=os.popen("gcc --version | grep ^gcc | sed 's/^.* //g'")
kl=fgcc.readline().split(".")

NOOCCI=(int(kl[0])>4)

if Arm or platform=="UBUNTU":
  boostsystem='boost_system'
  boostthread='boost_thread'
else:
  boostsystem='boost_system-mt'
  boostthread='boost_thread-mt'


package=os.path.basename(os.getcwd())
  

Use_Mongoose=os.path.exists("/usr/local/include/mongoose")

# includes
INCLUDES=['include',LYDAQROOT+"/drivers/MgRoc/include",LYDAQROOT+"/drivers/MPI/include",LYDAQROOT+"/drivers/include","/usr/include/boost141/","/usr/include/jsoncpp",ZDAQROOT+"/include",LYDAQROOT+"/drivers/utils/netLink/include"]
  
CPPFLAGS=["-pthread","-O4","-DLINUX", "-DREENTRANT" ,"-Dlinux", "-DLITTLE_ENDIAN__ ", "-Dx86","-std=c++11"]
if (Arm or NOOCCI):
    CPPFLAGS.append("-DNO_DB")
LIBRARIES=['pthread', 'm','stdc++',boostsystem,boostthread,'jsoncpp','netlink','cslm','zdaq','z','log4cxx','lydaq_MgRoc','lydaq_MPI']


#Library path XDAQ,DHCAL and ROOT + Python
if (Bit64):
  LIBRARY_PATHS=["/usr/lib64","/usr/local/lib",LYDAQROOT+"/drivers/lib",ZDAQROOT+"/lib"]
else:
  LIBRARY_PATHS=["/usr/lib","/usr/local/lib",LYDAQROOT+"/drivers/lib",ZDAQROOT+"/lib"]

if (Use_Mongoose):
  LIBRARY_PATHS.append('/usr/local/lib')
  LIBRARIES.append('mongoose')
  INCLUDES.append('/usr/local/include/')
  INCLUDES.append('/usr/local/include/mongoose')

Use_Oracle=os.path.exists("/usr/include/ILCConfDB")

if (Use_Oracle):
  INCLUDES.append("/usr/include/ILCConfDB")
  INCLUDES.append("/usr/include/ILCConfDB/occi11")
  
OCCIACCESS= not NOOCCI
if (Use_Oracle):
  LIBRARIES=LIBRARIES+['dl','uuid', 'ilcconfdb', 'dbi','xerces-c']
  if (not Arm and OCCIACCESS):
      LIBRARIES=LIBRARIES+[ 'occi', 'clntsh', 'nnz11', 'ilcconfdb',]

#link flags
LDFLAGS=["-fPIC","-dynamiclib"]


# Create the Environment
env = Environment(CPPPATH=INCLUDES,CPPFLAGS=CPPFLAGS,LINKFLAGS=LDFLAGS, LIBS=LIBRARIES,LIBPATH=LIBRARY_PATHS)

#print "CC is:",env.subst('$CPPPATH')




#print "CC is:",env.subst('$CPPPATH')



# Library source
#LIBRARY_SOURCES=Glob("src/*.cc")

#print LIBRARY_SOURCES
#LIBRARY_SOURCES=['src/MessageHandler.cc','src/MpiMessageHandler.cc','src/MpiInterface.cc','src/HR2ConfigAccess.cc','src/GricMpi.cc','src/WiznetManager.cc']
LIBRARY_SOURCES=['src/board.cc','src/sockethandler.cc','src/datahandler.cc','src/slchandler.cc','src/registerhandler.cc','src/interface.cc','src/C4iManager.cc']

print LIBRARY_SOURCES


#Shared library
lyname="lib/lydaq_app_"+package
print "building ",lyname
lypack=env.SharedLibrary(lyname,LIBRARY_SOURCES)




#Daemon 
EXE_LIBPATH=LIBRARY_PATHS
EXE_LIBPATH.append("./lib")
EXE_LIBS=LIBRARIES
EXE_LIBS.append("lydaq_app_"+package)
plist=[]


tdcd=env.Program("bin/lydaq_daemon_"+package,source="src/C4iDaemon.cxx",LIBPATH=EXE_LIBPATH,LIBS=EXE_LIBS)

plist.append(tdcd)

myinc=[]
#for x in Glob("include/*.hh"):
#  myinc.append("include/"+x.name)
#print plist
env.Install("../lib",lypack)
env.Install("../bin",plist)
env.Install("../include",myinc)
###env.Install("/opt/dhcal/lib",levbdimdaq)


env.Alias('install', ["../lib","../bin","../include"])



